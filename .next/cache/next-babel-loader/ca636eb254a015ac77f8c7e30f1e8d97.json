{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import {ADD_CLIENT} from '../actions/cartActions';\nconst cartReducer = (state = {\n  products: []\n}, action) => {\n  switch (action.type) {\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/obafa/Documents/chef-femi/redux/reducers/cartReducer.js"],"names":["cartReducer","state","products","action","type"],"mappings":";;;;;;AAAA;AAEA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAT,EAAyBC,MAAzB,KAAoC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACC;AACC,+BAAWH,KAAX;AAFF;AAIA,CALD;;AAOA,eAAeD,WAAf","sourcesContent":["// import {ADD_CLIENT} from '../actions/cartActions';\r\n\r\nconst cartReducer = (state = {products: []}, action) => {\r\n\tswitch(action.type) {\r\n\t\tdefault:\r\n\t\t\treturn {...state}\r\n\t}\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}